## <summary>Systemd components (not PID 1)</summary>


########################################
## <summary>
##   Make the specified type usable for
##   systemd unit files.
## </summary>
## <param name="type">
##   <summary>
##   Type to be used for systemd unit files.
##   </summary>
## </param>
#
interface(`systemd_unit_file',`
	gen_require(`
		attribute systemdunitfile;
	')

	files_type($1)
	typeattribute $1 systemdunitfile;
')

######################################
## <summary>
##   Allow domain to search systemd unit dirs.
## </summary>
## <param name="domain">
##   <summary>
##   Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_search_unit_dirs',`
	gen_require(`
		attribute systemdunitfile;
	')

	files_search_var_lib($1)
	search_dirs_pattern($1, systemdunitfile, systemdunitfile)
')

######################################
## <summary>
##   Allow domain to list systemd unit dirs.
## </summary>
## <param name="domain">
##   <summary>
##   Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_list_unit_dirs',`
	gen_require(`
		attribute systemdunitfile;
	')

	files_search_var_lib($1)
	allow $1 systemdunitfile:dir list_dir_perms;
')

######################################
## <summary>
##   Allow domain to create systemd unit dirs.
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_create_unit_dirs',`
	gen_require(`
		attribute systemdunitfile;
	')

	files_search_var_lib($1)
	allow $1 systemdunitfile:dir create;
')

########################################
## <summary>
##   Manage systemd unit dirs
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_manage_unit_dirs',`
	gen_require(`
		attribute systemdunitfile;
	')

	manage_dirs_pattern($1, systemdunitfile, systemdunitfile)
')

########################################
## <summary>
##   Manage systemd unit link files
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_manage_unit_lnk_file',`
	gen_require(`
		attribute systemdunitfile;
	')

	manage_lnk_files_pattern($1, systemdunitfile, systemdunitfile)
')

########################################
## <summary>
##   Manage all systemd unit files
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_manage_unit_files',`
	gen_require(`
		attribute systemdunitfile;
	')

	manage_files_pattern($1, systemdunitfile, systemdunitfile)
')

########################################
## <summary>
##   Manage all systemd unit lnk_files
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_manage_unit_symlinks',`
	gen_require(`
		attribute systemdunitfile;
	')

	manage_lnk_files_pattern($1, systemdunitfile, systemdunitfile)
')


#####################################
## <summary>
##   Allow domain to getattr all systemd unit files.
## </summary>
## <param name="domain">
##   <summary>
##   Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_getattr_unit_files',`
	gen_require(`
		attribute systemdunitfile;
	')

	files_search_var_lib($1)
	getattr_files_pattern($1, systemdunitfile, systemdunitfile)
')

######################################
## <summary>
##   Allow domain to read all systemd unit files.
## </summary>
## <param name="domain">
##   <summary>
##   Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_read_unit_files',`
	gen_require(`
		attribute systemdunitfile;
	')

	files_search_var_lib($1)
	read_files_pattern($1, systemdunitfile, systemdunitfile)
')

#####################################
## <summary>
##   Dontaudit domain to read all systemd unit files.
## </summary>
## <param name="domain">
##   <summary>
##     Domain to not audit.
##   </summary>
## </param>
#
interface(`systemd_dontaudit_read_unit_files',`
	gen_require(`
		attribute systemdunitfile;
	')

	dontaudit $1 systemdunitfile:file read_file_perms;
')

########################################
## <summary>
##   Allow relabelto all systemd unit dirs
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_relabelto_unit_dirs',`
	gen_require(`
		attribute systemdunitfile;
	')

	relabelto_dirs_pattern($1, systemdunitfile, systemdunitfile)
')

######################################
## <summary>
##   Read systemd_login PID files.
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_logind_read_pid_files',`
	gen_require(`
		type systemd_logind_var_run_t;
	')

	files_search_pids($1)
	read_files_pattern($1, systemd_logind_var_run_t, systemd_logind_var_run_t)
')

######################################
## <summary>
##   Manage systemd_login PID files.
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_logind_manage_pid_files',`
	gen_require(`
		type systemd_logind_var_run_t;
	')

	files_search_pids($1)
	manage_files_pattern($1, systemd_logind_var_run_t, systemd_logind_var_run_t)
')

######################################
## <summary>
##   Manage systemd_login PID dirs.
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_logind_manage_pid_dirs',`
	gen_require(`
		type systemd_logind_var_run_t;
	')

	files_search_var($1)
	manage_dirs_pattern($1, systemd_logind_var_run_t, systemd_logind_var_run_t)
')

######################################
## <summary>
##   List systemd_login PID dirs.
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_logind_list_pid_dirs',`
	gen_require(`
		type systemd_logind_var_run_t;
	')

	files_search_pids($1)
	list_dirs_pattern($1, systemd_logind_var_run_t, systemd_logind_var_run_t)
')

######################################
## <summary>
##   Manage systemd_login PID pipes.
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_logind_manage_pid_pipes',`
	gen_require(`
		type systemd_logind_var_run_t;
	')

	files_search_pids($1)
	manage_fifo_files_pattern($1, systemd_logind_var_run_t, systemd_logind_var_run_t)
')

######################################
## <summary>
##   Use inherited systemd
##   logind file descriptors.
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_logind_use_fds',`
	gen_require(`
		type systemd_logind_t;
	')

	allow $1 systemd_logind_t:fd use;
')

########################################
## <summary>
##   Send and receive messages from
##   systemd logind over dbus.
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_logind_dbus_chat',`
	gen_require(`
		type systemd_logind_t;
		class dbus send_msg;
	')

	allow $1 systemd_logind_t:dbus send_msg;
	allow systemd_logind_t $1:dbus send_msg;
')

#######################################
## <summary>
##   Send messages to systemd_logind over dbus.
## </summary>
## <param name="domain">
##   <summary>
##   Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_logind_dbus_send',`
	gen_require(`
		type systemd_logind_t;
		class dbus send_msg;
	')

	allow $1 systemd_logind_t:dbus send_msg;
')

########################################
## <summary>
##   Allow the specified domain to start all systemd services.
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_services_start',`
	gen_require(`
		attribute systemdunitfile;
	')

	allow $1 systemdunitfile:service start;
')

########################################
## <summary>
##   Allow the specified domain to access status of systemd services.
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_services_status',`
	gen_require(`
		attribute systemdunitfile;
	')

	allow $1 systemdunitfile:service status;
')

#######################################
## <summary>
##   Allow the specified domain to reload all systemd services.
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##    </summary>
## </param>
#
interface(`systemd_services_reload',`
	gen_require(`
		attribute systemdunitfile;
	')

	allow $1 systemdunitfile:service reload;
')

########################################
## <summary>
##   Allow the specified domain to modify the systemd configuration of
##   all systemd services
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_config_all_services',`
	gen_require(`
		attribute systemdunitfile;
	')

	allow $1 systemdunitfile:service all_service_perms;
	init_config_all_script_files($1)
')

########################################
## <summary>
##   Allow the specified domain to modify the systemd configuration of
##   all systemd services
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_config_systemd_services',`
	gen_require(`
		type systemd_unit_file_t;
	')

	allow $1 systemd_unit_file_t:service all_service_perms;
	init_config_all_script_files($1)
')

########################################
## <summary>
##   Manage all systemd random seed file
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_manage_random_seed',`
	gen_require(`
		type random_seed_t;
	')

	allow $1 random_seed_t:file manage_file_perms;
	files_var_lib_filetrans($1, random_seed_t, file, "random_seed")
')

########################################
## <summary>
##   Allow process to read hostname config file.
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
## <rolecap/>
#
interface(`systemd_hostnamed_read_config',`
	gen_require(`
		type hostname_etc_t;
	')

	files_search_etc($1)
	allow $1 hostname_etc_t:file read_file_perms;
')

########################################
## <summary>
##   Allow process to manage hostname config file.
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
## <rolecap/>
#
interface(`systemd_hostnamed_manage_config',`
	gen_require(`
		type hostname_etc_t;
	')

	files_search_etc($1)
	allow $1 hostname_etc_t:file manage_file_perms;
	files_etc_filetrans($1, hostname_etc_t, file, "hostname")
')

#######################################
## <summary>
##  Create objects in /run/systemd/generator directory
##  with an automatic type transition to
##  a specified private type.
## </summary>
## <param name="domain">
##  <summary>
##  Domain allowed access.
##  </summary>
## </param>
## <param name="private_type">
##  <summary>
##  The type of the object to create.
##  </summary>
## </param>
## <param name="object_class">
##  <summary>
##  The class of the object to be created.
##  </summary>
## </param>
## <param name="name" optional="true">
## <summary>
## The name of the object being created.
## </summary>
## </param>
#
interface(`systemd_unit_file_filetrans',`
	gen_require(`
		type systemd_unit_file_t;
	')

	files_search_pids($1)
	filetrans_pattern($1, systemd_unit_file_t, $2, $3, $4)
')

#######################################
## <summary>
##  Create a directory in the /usr/lib/systemd/system directory.
## </summary>
## <param name="domain">
##  <summary>
##  Domain allowed access.
##  </summary>
## </param>
#
interface(`systemd_create_unit_file_dirs',`
	gen_require(`
		type systemd_unit_file_t;
	')

	create_dirs_pattern($1, systemd_unit_file_t, systemd_unit_file_t)
')

#######################################
## <summary>
##  Create a link in the /usr/lib/systemd/system directory.
## </summary>
## <param name="domain">
##  <summary>
##  Domain allowed access.
##  </summary>
## </param>
#
interface(`systemd_create_unit_file_lnk',`
	gen_require(`
		type systemd_unit_file_t;
	')

	create_lnk_files_pattern($1, systemd_unit_file_t, systemd_unit_file_t)
')

########################################
## <summary>
## Transition to systemd named content
## </summary>
## <param name="domain">
## <summary>
##   Domain allowed access.
## </summary>
## </param>
#
interface(`systemd_filetrans_named_content',`
	gen_require(`
		type systemd_passwd_var_run_t;
		type systemd_logind_var_run_t;
		type hostname_etc_t;
		type systemd_home_t;
	')

	files_pid_filetrans($1, systemd_logind_var_run_t, file, "nologin")
	init_named_pid_filetrans($1, systemd_passwd_var_run_t, dir, "ask-password-block")
	init_named_pid_filetrans($1, systemd_passwd_var_run_t, dir, "ask-password")
	files_etc_filetrans($1, hostname_etc_t, file, "hostname" )
	files_etc_filetrans($1, hostname_etc_t, file, "machine-info" )
')

########################################
## <summary>
##   Read systemd homedir content
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_read_home_content',`
	gen_require(`
		type systemd_home_t;
	')

	optional_policy(`
		gnome_search_gconf_data_dir($1)
	')
	read_files_pattern($1, systemd_home_t, systemd_home_t)
	read_lnk_files_pattern($1, systemd_home_t, systemd_home_t)
')

########################################
## <summary>
##   Get the system status information from systemd_login
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_logind_status',`
	gen_require(`
		type systemd_logind_t;
	')

	allow $1 systemd_logind_t:service status;
')

########################################
## <summary>
##   Send systemd_login a null signal.
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_logind_signull',`
	gen_require(`
		type systemd_logind_t;
	')

	allow $1 systemd_logind_t:process signull;
')

########################################
## <summary>
##   Send and receive messages from
##   systemd timedated over dbus.
## </summary>
## <param name="domain">
##   <summary>
##     Domain allowed access.
##   </summary>
## </param>
#
interface(`systemd_timedated_dbus_chat',`
	gen_require(`
		type systemd_timedated_t;
		class dbus send_msg;
	')

	allow $1 systemd_timedated_t:dbus send_msg;
	allow systemd_timedated_t $1:dbus send_msg;
')

########################################
## <summary>
## Send and receive messages from
## systemd hostnamed over dbus.
## </summary>
## <param name="domain">
## <summary>
## Domain allowed access.
## </summary>
## </param>
#
interface(`systemd_hostnamed_dbus_chat',`
	gen_require(`
		type systemd_hostnamed_t;
		class dbus send_msg;
	')

	allow $1 systemd_hostnamed_t:dbus send_msg;
	allow systemd_hostnamed_t $1:dbus send_msg;
')

########################################
## <summary>
## Send and receive messages from
## systemd localed over dbus.
## </summary>
## <param name="domain">
## <summary>
## Domain allowed access.
## </summary>
## </param>
#
interface(`systemd_localed_dbus_chat',`
	gen_require(`
		type systemd_localed_t;
		class dbus send_msg;
	')

	allow $1 systemd_localed_t:dbus send_msg;
	allow systemd_localed_t $1:dbus send_msg;
')

########################################
## <summary>
## Dontaudit attempts to send dbus domains chat messages
## </summary>
## <param name="domain">
## <summary>
## Domain to not audit.
## </summary>
## </param>
#
interface(`systemd_dontaudit_dbus_chat',`
	gen_require(`
		attribute systemd_domain;
		class dbus send_msg;
	')

	dontaudit $1 systemd_domain:dbus send_msg;
')

########################################
## <summary>
## Dontaudit attempts to send dbus domains chat messages
## </summary>
## <param name="domain">
## <summary>
## Domain to not audit.
## </summary>
## </param>
#
interface(`systemd_socket_activated',`
	gen_require(`
		attribute systemd_socket_activated_subject_type;
		attribute systemd_socket_activated_object_type;
	')

	typeattribute $1 systemd_socket_activated_subject_type;
	typeattribute $2 systemd_socket_activated_object_type;
')

########################################
## <summary>
## Allow specified domain to get status of systemd unit files
## </summary>
## <param name="domain">
## <summary>
## Domain to not audit.
## </summary>
## </param>
#
interface(`systemd_unit_files_service_status',`
	gen_require(`
		attribute systemdunitfile;
	')

	allow $1 systemdunitfile:service status;
')

########################################
## <summary>
## Allow specified domain to start systemd unit files
## </summary>
## <param name="domain">
## <summary>
## Domain to not audit.
## </summary>
## </param>
#
interface(`systemd_unit_files_service_start',`
	gen_require(`
		attribute systemdunitfile;
	')

	allow $1 systemdunitfile:service start;
')

########################################
## <summary>
## Allow specified domain to stop systemd unit files
## </summary>
## <param name="domain">
## <summary>
## Domain to not audit.
## </summary>
## </param>
#
interface(`systemd_unit_files_service_stop',`
	gen_require(`
		attribute systemdunitfile;
	')

	allow $1 systemdunitfile:service stop;
')

########################################
## <summary>
## Allow specified domain to start power units
## </summary>
## <param name="domain">
## <summary>
## Domain to not audit.
## </summary>
## </param>
#
interface(`systemd_power_units_service_start',`
	gen_require(`
		type power_unit_file_t;
	')

	allow $1 power_unit_file_t:service start;
')
